Define (s:Thing)-[:iss]->(o:big) {
    (s:Thing)-[:iss]->(o1:nice)
}

Define (s:Thing)-[:iss]->(o:blue) {
	(s:Thing)-[:iss]->(o1:furry)
}

Define (s:Thing)-[:iss]->(o:quiet) {
	(s:Thing)-[:iss]->(o1:blue) AND (s:Thing)-[:iss]->(o2:furry)
}

Define (s:Thing)-[:iss]->(o:blue) {
	(s:Thing)-[:iss]->(o1:round) AND (s:Thing)-[:iss]->(o2:nice)
}

Define (s:Thing/`Bob`)-[:iss]->(o:blue) {
	(s:Thing/`Bob`)-[:iss]->(o1:round)
}

Define (s:Thing)-[:iss]->(o:furry) {
	(s:Thing)-[:iss]->(o1:big) AND (s:Thing)-[:iss]->(o2:quiet)
}

Define (s:Thing)-[:iss]->(o:smart) {
	(s:Thing)-[:iss]->(o1:blue) AND (s:Thing)-[:iss]->(o2:furry)
}

Define (s:Thing/`Charlie`)-[:iss]->(o:quiet) {
	(s:Thing/`Charlie`)-[:iss]->(o1:nice) AND (s:Thing/`Charlie`)-[:iss]->(o2:big)
}