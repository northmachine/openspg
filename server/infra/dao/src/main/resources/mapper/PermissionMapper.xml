<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 OpenSPG Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antgroup.openspg.server.infra.dao.mapper.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.antgroup.openspg.server.infra.dao.dataobject.PermissionDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="resource_id" jdbcType="BIGINT" property="resourceId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="resource_tag" jdbcType="VARCHAR" property="resourceTag" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="expire_date" jdbcType="DATE" property="expireDate" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    id, gmt_create, gmt_modified, user_no, resource_id, role_id, resource_tag, status, 
    expire_date
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from kg_resource_permission
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    select  <include refid="Base_Column_List" />
    from kg_resource_permission
    <trim prefix="where" prefixOverrides="and">
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.gmtModified != null">
        and gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
      </if>
      <if test="record.userNo != null">
        and user_no = #{record.userNo,jdbcType=VARCHAR}
      </if>
      <if test="record.resourceId != null">
        and resource_id = #{record.resourceId,jdbcType=BIGINT}
      </if>
      <if test="record.roleId != null">
        and role_id = #{record.roleId,jdbcType=BIGINT}
      </if>
      <if test="record.resourceTag != null">
        and resource_tag = #{record.resourceTag,jdbcType=VARCHAR}
      </if>
      <if test="record.status != null">
        and status = #{record.status,jdbcType=VARCHAR}
      </if>
      <if test="record.expireDate != null">
        and expire_date = #{record.expireDate,jdbcType=DATE}
      </if>
    </trim>
    order by gmt_modified desc limit #{start}, #{size}
  </select>
  

  <select id="selectCountByCondition" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.PermissionDO" resultType="int" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    select count(*) from kg_resource_permission
    <trim prefix="where" prefixOverrides="and">
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="gmtModified != null">
        and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
      </if>
      <if test="userNo != null">
        and user_no = #{userNo,jdbcType=VARCHAR}
      </if>
      <if test="resourceId != null">
        and resource_id = #{resourceId,jdbcType=BIGINT}
      </if>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=BIGINT}
      </if>
      <if test="resourceTag != null">
        and resource_tag = #{resourceTag,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="expireDate != null">
        and expire_date = #{expireDate,jdbcType=DATE}
      </if>
    </trim>
  </select>
  

  <select id="selectByIds" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    select <include refid="Base_Column_List" />
    from kg_resource_permission where id in
    <foreach close=")" collection="ids" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>
  

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    delete from kg_resource_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  

  <delete id="deleteByIds">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    delete from kg_resource_permission where id in
    <foreach close=")" collection="ids" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>
  

  <insert id="insert" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.PermissionDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_resource_permission (gmt_create, gmt_modified, user_no,
      resource_id, role_id, resource_tag, 
      status, expire_date)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{userNo,jdbcType=VARCHAR}, 
      #{resourceId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{resourceTag,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{expireDate,jdbcType=DATE})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.PermissionDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    update kg_resource_permission
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceTag != null">
        resource_tag = #{resourceTag,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="expireDate != null">
        expire_date = #{expireDate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 批量插入权限数据 -->
  <insert id="batchInsert">
    insert into kg_resource_permission (gmt_create, gmt_modified, user_no,
    resource_id, role_id, resource_tag,
    status, expire_date)
    values
    <foreach collection ="records" item="item" separator =",">
      (#{item.gmtCreate,jdbcType=TIMESTAMP},
      #{item.gmtModified,jdbcType=TIMESTAMP},
      #{item.userNo,jdbcType=VARCHAR},
      #{item.resourceId,jdbcType=BIGINT},
      #{item.roleId,jdbcType=BIGINT},
      #{item.resourceTag,jdbcType=VARCHAR},
      #{item.status,jdbcType=VARCHAR},
      #{item.expireDate,jdbcType=DATE})
    </foreach >
  </insert>

  <update id="updateResourceRole">
      update kg_resource_permission set
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      role_id = #{record.roleId,jdbcType=BIGINT}
      where user_no = #{record.userNo,jdbcType=VARCHAR}
          and resource_id = #{record.resourceId,jdbcType=VARCHAR}
          and resource_tag = #{record.resourceTag,jdbcType=VARCHAR}
  </update>

  <select id="selectAllByCondition" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 25 10:54:59 CST 2020.
    -->
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    <trim prefix="where" prefixOverrides="and">
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.gmtModified != null">
        and gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
      </if>
      <if test="record.userNo != null">
        and user_no = #{record.userNo,jdbcType=VARCHAR}
      </if>
      <if test="record.resourceId != null">
        and resource_id = #{record.resourceId,jdbcType=BIGINT}
      </if>
      <if test="record.roleId != null">
        and role_id = #{record.roleId,jdbcType=BIGINT}
      </if>
      <if test="record.resourceTag != null">
        and resource_tag = #{record.resourceTag,jdbcType=VARCHAR}
      </if>
      <if test="record.status != null">
        and status = #{record.status,jdbcType=VARCHAR}
      </if>
      <if test="record.expireDate != null">
        and expire_date = #{record.expireDate,jdbcType=DATE}
      </if>
    </trim>
  </select>

  <select id="selectUserTypeRoleForUpdate" resultMap="BaseResultMap" useCache="false">
    select
    <include refid="Base_Column_List" />
    from kg_resource_permission
  where user_no = #{userNo}
  and resource_id = #{resourceId}
  and resource_tag = #{resourceTag}
  for update
  </select>

  <select id="selectByRoleId" resultMap="BaseResultMap" useCache="false">
    select  <include refid="Base_Column_List" />
    from kg_resource_permission where user_no = #{userId} and resource_tag = #{resourceTag} and status = 1 and role_id in
    <foreach close=")" collection="roleIds" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <delete id="deleteByResourceId">
    delete from kg_resource_permission
    where resource_id = #{resourceId} and resource_tag = #{resourceTag}
  </delete>

  <delete id="deleteByResourceIdAndUserNo">
      delete from kg_resource_permission
      where user_no = #{record.userNo,jdbcType=VARCHAR} and resource_id = #{record.resourceId,jdbcType=VARCHAR}
  </delete>

  <delete id="deletePermission" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.PermissionDO">
    delete from kg_resource_permission
    where user_no = #{userNo}
      and   resource_id = #{resourceId}
      and   resource_tag = #{resourceTag}
  </delete>

  <select id="selectByResources" resultMap="BaseResultMap" useCache="false">
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    where resource_id in
    <foreach open="(" separator="," close=")" collection="resourceIds" item="item">
      #{item}
    </foreach>
    and resource_tag = #{resourceTag}
    and status = '1'
  </select>
  
  <select id="getResourceIdByUserNoAndRoleName" resultMap="BaseResultMap" useCache="false">
    select  role.id, role.gmt_create, role.gmt_modified, role.user_no, role.resource_id, role.role_id,
           role.resource_tag, role.status, role.expire_date 
    from kg_resource_permission role JOIN kg_role kr ON role.role_id = kr.id
    where role.user_no = #{userNo} AND role.resource_tag = #{resourceTag} AND role.status = '1'
    <if test="roleName != null" >
      AND kr.role_name = #{roleName}
    </if>
  </select>
  
  <select id="getByResourceIds" resultMap="BaseResultMap" useCache="false">
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    where resource_id in    
    <foreach  collection="resourceIds" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    <if test="roleId != null" >
      and role_id = #{roleId}
    </if>
    and status = '1'
  </select>

  <delete id="deleteByResourceIds">
    delete from kg_resource_permission
    where resource_id in
    <foreach  collection="resourceIds" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <select id="selectLikeByUserNoAndRoleId" resultMap="BaseResultMap">
    select id,role_id,resource_id,t1.user_no as user_no,status,gmt_create,gmt_modified
    from kg_resource_permission t1,
    (
    select user_no from kg_user
    where user_no like concat('%',#{userNo},'%') or
    lower(real_name) like concat('%',#{userNo},'%') or
    lower(nick_name) like concat('%',#{userNo},'%')
    ) t2
    where t1.user_no = t2.user_no
    and t1.status = '1'
    and t1.resource_tag = #{resourceTag}
    and t1.resource_id = #{resourceId}
    <if test="roleId != null">
      and t1.role_id = #{roleId}
    </if>
    order by t1.gmt_modified desc
    limit #{start}, #{size}
  </select>

  <select id="selectLikeCountByUserNoAndRoleId" resultType="int">
    select count(*)
    from kg_resource_permission t1,
    (
    select user_no from kg_user
    where user_no like concat('%',#{userNo},'%') or
    lower(real_name) like concat('%',#{userNo},'%') or
    lower(nick_name) like concat('%',#{userNo},'%')
    ) t2
    where t1.user_no = t2.user_no
    and t1.status = '1'
    and t1.resource_tag = #{resourceTag}
    and t1.resource_id = #{resourceId}
    <if test="roleId != null">
      and t1.role_id = #{roleId}
    </if>
  </select>

  <select id="selectByResourceIdsAndResourceTag" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    where resource_id in
    <foreach  collection="resourceIds" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and resource_tag = #{resourceTag}
    and status = '1'
    order by gmt_modified desc
  </select>

  <select id="getPermissionByUserRolesAndId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    where resource_id in
    <foreach open="(" separator="," close=")" collection="resourceIds" item="item">
      #{item}
    </foreach>
    <if test="userNo != null">
      and user_no = #{userNo}
    </if>
    <if test="roleId != null ">
      and role_id = #{roleId}
    </if>
    and resource_tag = #{resourceTag}
    and status = '1'
  </select>

  <select id="getPermissionByUserNoAndResourceTag" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from kg_resource_permission
    where
    user_no = #{userNo}
    and resource_tag = #{resourceTag}
    and status = '1'
  </select>
</mapper>